name: CI & Security Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Cancel outdated runs on the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write
  pull-requests: read

jobs:
  local-checks:
    name: "Local Checks"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4
      - name: "Set up Python"
        uses: actions/setup-python@v5
      - name: "Run pre-commit hooks"
        uses: pre-commit/action@v3.0.1

  lint:
    name: "Super-Linter"
    runs-on: ubuntu-latest
    needs: [local-checks]
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Lint Code Base"
        uses: github/super-linter@v7
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  security:
    name: "Security Scans"
    runs-on: ubuntu-latest
    needs: [local-checks]
    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4
      - name: "Detect secrets with TruffleHog"
        uses: trufflesecurity/trufflehog@v3
        with:
          path: ./
          fail: true
      - name: "Scan Node.js dependencies"
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm audit --audit-level=high
      - name: "Scan Python dependencies"
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: |
          pip install safety
          safety check --full-report
      - name: "Scan Go dependencies"
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true
      - run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...